# Remap prefix to Ctrl-space
unbind C-b
set -g prefix C-space
bind C-space send-prefix

# Easy switch window
bind-key C-space last-window

# Set a Ctrl-a shortcut for reloading your tmux config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# 0 is too far from ` ;)
#set -g base-index 1
#set-window-option -g pane-base-index 2 # tmuxinator compat

# For Vim proper colorscheme:
# If using Alacritty, set TERM: xterm-256color
# Then:
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Disable renaming window from shell
set-option -g allow-rename off

# A mouse
set -g mouse on

# Enable pane name display
set -g pane-border-status top

# Create/split in the same directory of current pane
bind-key c new-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# Act like vim
setw -g mode-keys vi

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Copy and paste between tmux panes https://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/
# - Now you can enter copy mode by pressing CTRL`+`b`,`[, and then go to start
# point, press ‘v’ and start copying. After you have selected text you want to
# copy, you can just press ‘y’ (or the default ‘enter’ key) to copy the text into
# Tmux's buffer. This is exactly the commands you would use in Vim to copy text.
# - To paste, press CTRL`+`b`,`P. Note that it's capital ‘p’ (i.e. SHIFT`+`p). This
# again is similar to Vim's shortcut ‘p’ for paste, though not exactly similar.
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# From now onwards, whatever you copy in Tmux buffer will also land into system clipboard.
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Size
bind j resize-pane -D 10
bind k resize-pane -U 10
bind h resize-pane -L 30
bind l resize-pane -R 30

# No delay between modes
set -sg escape-time 0

# Scroll history
set-option -g history-limit 50000

# Required for vim-gitgutter
set -g focus-events on
