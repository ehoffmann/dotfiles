# Remap prefix to Ctrl-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Set a Ctrl-a shortcut for reloading your tmux config
bind r source-file ~/.tmux.conf

# Easy switch window
bind-key C-a last-window

# 0 is too far from ` ;)
#set -g base-index 1
#set-window-option -g pane-base-index 2 # tmuxinator compat

# Set the default terminal mode to 256color mode
set -g default-terminal "xterm-256color"

# Disble renaming window from shell
set-option -g allow-rename off

# A mouse
set -g mouse-utf8 on
set -g mouse-select-pane on

# copy and paste
bind P paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'r' rectangle-toggle

# Create/split window/pane in the same directory of current
bind-key c new-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# Scroll with mouse
setw -g mode-mouse on

# Act like vim
setw -g mode-keys vi

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Send the prefix to client inside window (ala nested sessions)
bind-key a send-prefix

# Size
bind Down resize-pane -D 10
bind Up resize-pane -U 10
bind Left resize-pane -L 30
bind Right resize-pane -R 30

# No delay between modes
set -sg escape-time 0
